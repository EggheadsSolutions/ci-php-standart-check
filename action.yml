name: 'PHP Coding Standard'
description: 'PHP Coding Standard'

inputs:
  php-version:
    description: 'PHP Version'
    required: true
    default: '7.4'

  cache-key:
    description: 'Key for cache'
    required: true
    default: 'eggheads-extension-php'

  extensions:
    description: 'Extensions PHP'
    required: true
    default: 'bcmath, iconv, ctype, gd, mbstring, mysqli, pdo, pdo_mysql, sockets, zip, soap, intl, fileinfo, json, libxml, openssl, pcntl, posix, simplexml, zend-opcache, runkit7, igbinary, redis'

  tools:
    description: 'Tools'
    required: true
    default: 'composer, cs2pr'

  app-local-php:
    description: 'App Local PHP Config'
    required: true
    default: 'no'

  GITHUB_TOKEN:
    description: 'token'
    requierd: false
    default: ''

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - name: Create App Local PHP Config
      if: ${{ inputs.app-local-php == 'yes' }}
      run: |
        echo "<?php
        return [];" > ./config/app_local.php
      shell: bash

    - name: Setup cache environment
      id: extcache
      uses: shivammathur/cache-extensions@v1
      with:
        php-version: ${{ inputs.php-version }}
        extensions: ${{ inputs.extensions }}
        key: ${{ inputs.cache-key }}

    - name: Cache extensions
      uses: actions/cache@v3
      with:
        path: ${{ steps.extcache.outputs.dir }}
        key: ${{ steps.extcache.outputs.key }}
        restore-keys: ${{ steps.extcache.outputs.key }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        extensions: ${{ inputs.extensions }}
        tools: ${{ inputs.tools }}
      env:
        COMPOSER_TOKEN: ${{ inputs.GITHUB_TOKEN }}

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-php-

    - id: install-dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader
      shell: bash

    - id: run-php-code-sniffer
      run: vendor/bin/phpcs -p src/ tests/ --report=checkstyle -q | cs2pr
      shell: bash

    - id: run-php-mess-detector
      run: vendor/bin/phpmd src/,tests/ github phpmd-ruleset.xml
      shell: bash

    - id: run-php-stan
      run: vendor/bin/phpstan --configuration=phpstan.neon analyse --error-format=checkstyle --no-progress | cs2pr
      shell: bash
